科目名: プログラミング実習III
課題: B9
番号: 37022503
氏名: 山形 隼士
作成: 2023/12/9

----------------------------------------
[課題9.1]
[List 9.1] のプログラムを入力し (コメントは省略して良い), コンパイル, 実行した後, プログラムに
適当な修正を加え, 何か好きなものを計算するプログラムを作成した.

実行結果は以下の通りである
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_1.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
ジンバブエドルの金額を入力してください: 
100
100ジンバブエドルは41.2962円です

リストのプログラムを適当に修正して、ジンバブエドルを日本円に直すコードを作成した。
インフレで有名であったが、現在はそこまでインフレが進んでいるわけではなさそうである。
初めてC++を使ったが、Cとはまた違った感触のため、しっかりコードを書いて慣れていきたい。

----------------------------------------
[課題9.2]
2つの整数型のデータの内容を交換する関数 swap(int&, int&) を作成し, 実行結果を確認した.

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_2.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
a = 10, b = 20

二つのint型のデータを交換する関数を作成することができた。
基本的にCの時と同じく間にtmpを挟むことでデータを交換した。
まだそこまで難しくなかったため、あまり時間がかからなかった。

----------------------------------------
[課題9.3]
スタックのプログラムを入力し ([List 9.11], [List 9.12], [List 9.13] をこの順に一つのファイルに打ち
込む), コンパイルし実行した.なお、実験状況・感想とともに, 作成したプログラムをレポートに添付した.

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_3.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
9
8
2
3
5

出力された数列については、実際のコード内のコメントにも書かれているが、
一つ目の9が63行目、8が65行目、2が68行目の処理によってそれぞれ出力されており、
残りの二つがwhile文中の処理によって出力されている。スタックというものを初めて使ったが、
C言語の構造体に少し似ていることがわかった、しかし構造体にそのデータを操作するための関数定義を付随させているため、
初見では理解ができず、かなり苦しんだ。覚えてしまえばあまり時間はかからなかったため、しっかりと理解してから課題に取り組みたい。

----------------------------------------
[課題9.4]
前の演習で作成したスタックのプログラムを, 配列を動的に割当てるバージョンに変更した. コンスト
ラクタ中で max の値を表示するなどして, 指定したサイズの配列が割当てられていることを確認した.

実行結果は以下の通りである
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_4.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
配列のサイズ: 100
9
8
2
3
5

課題1_3で作成したスタックのコードを配列を動的割り当てを用いて割り当てる方針に変更した。
具体的にはstackを定義している部分を変更し、リスト9_16のように変更した。
また、その後デストラクタにて割り当てた領域の解放を行なった。
動的割り当てのやり方にmallocが出てこないことに少し驚いたが、個人的にはこちらの方が理解しやすい感触がある。

----------------------------------------
[課題9.5]
stack に equal(const stack&, const stack&) を追加したバージョンを作成し, 動作を確認した.

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_5.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
1
0

bool型を使い、二つのstackが一致していれば１を、そうでなければ０を返す関数を作成することができた。
また、フレンド関数というものも勉強することができた。それがクラス定義の中のデータを取り扱うための関数ということがわかったが、
まだ理解しきれていないため、もう少し慣れていきたい。また、今回の出力では、一つ目は同じものをstack内に入れているため1が、
二つ目はs2をpopしているため中身が変わり0がそれぞれ出力されている。

----------------------------------------
[課題9.6]
上の [List 9.22], [List 9.23] をコンパイルし, 結果を確認した. その後, double 型の引数 r をひと
つだけとって, 実部に r の値を設定し虚部には 0 を設定するようなコンストラクタ Complex(double) を作成し,
main(void) にそれを使うコードを追加した.

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ 1_6.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
1.11+2.22i
3.33+4.44i
9.99+88.88i
1.11+2.22i
実部を入力してください: 2
2+0i

入力された値rを実部とし、虚部には0を設定するようなコンストラクタを作成した。
具体的にはcomplex内にてimagの値を0.0に設定することでうまく実装できた。

----------------------------------------
[課題9.7]
Complex に対する減算, 乗算を定義し, 次のようなメインルーチンで実行結果を確めた.

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_7.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
-0.65+1.32i
-5+10i

それぞれ減算と乗算をoperator-, operator*という名前で定義することで、
問題の条件通りに動作させることができた。＋や-を関数の名前にすることができるのは
目から鱗であった。四則演算はこれからこのように定義していきたい。

----------------------------------------
[課題9.8]
上の [List 9.29] を実行してその結果を示せ. (プログラムを提出せよ.)

実行結果は以下の通りである。
gatahayato@Gatas-MacBook-Pro B9 % g++ -Wall 1_8.cpp
gatahayato@Gatas-MacBook-Pro B9 % ./a.out
1+2i
1+3i
1+2i
2+3i
2+4i
2+3i

前回の課題にて加算、減算、乗算を定義したため、それらを使って計算をすることができた。
また、a[]の配列を定義し、それぞれの値を1+2i, 1+3i, 1+2iとしたのちに、全てに1.0を足したものを
出力していると考えられる。

----------------------------------------
[課題 B9 の感想]
今回の課題では、C++を初めて使ってプログラミングをした。C++は課題の中でも述べたようにCとはまた違ったものであり、
今まで使ってきた関数や、書き方の決まりなどをあまり使うことができなかったため、これか４回しっかりとC++に慣れながらコードを作成していきたい。
また、オプション課題についても随時取り組み、今までの内容を定着させたい。この授業においてテストは終わったが、
テストの有無に関係なく、C,C++を習得するために改めて努力していきたい。

